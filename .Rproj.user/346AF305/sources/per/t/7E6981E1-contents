library("readxl")

names <- read_excel("FRT Weekly Monitoting.xlsx", sheet = 1,
                    range = "A1:P1", col_names = TRUE)
# чекать по имени, что нужно.



A <- read_excel("FRT Weekly Monitoting.xlsx", sheet = 1,
                col_names = TRUE,col_types = c("date",rep("text",5),rep("numeric",9)))


observe({
  if (is.null(input$file1))
    return(NULL)
  cnames <- colnames(names())
  updateCheckboxGroupInput(session, inputId = "show_vars", choices = cnames)
})

data <- read_excel(input$file1$name, sheet = 1,
                   range = "A1:P1", col_names = TRUE)

observe({
  if (is.null(input$file1))
    return(NULL)
  if (input$show_table)
    show <- input$headers
  output$text <- renderText({
    return(show) 
  })
  removeUI("headers")
  
})



while(i<= length(names_sort)){
  id <- grep(names_sort[i],col_sort)
  if (id<1){
    c="да"
  }
  
}

switch(x,
       "Date" = "date",
       "Material" = "text",
       "FOUP ID" = "text",
       "Wafer ID" = "text",
       "Deposition/Sputter" = "text",
       "Test's type" = "text",
       "Use" = "text",
       "Test type" = "text",
       "Recipe" = "text",
       "Operator" = "text",
       "Point" = "numeric",
       "X(mm)" = "numeric",
       "Y(mm)" = "numeric",
       "Thickness(nm)" = "numeric",
       "Thickness PRE(nm)" = "numeric",
       "Thickness POST(nm)" = "numeric",
       "Dep time(s)" = "numeric",
       "Dep Rate (nm/min)" = "numeric",
       "Average Thickness(nm)" = "numeric",
       "Max(nm)" = "numeric",
       "Min(nm)" = "numeric",
       "Delta" = "numeric",
       "Delta, nm" = "numeric",
       "Delta (nm)" = "numeric",
       "NU, %" = "numeric",
       "guess")



data[i_col_type[i]] <- 





data <- read_excel("FRT Weekly Monitoting.xlsx", sheet = 1, col_names = TRUE, n_max = 1)

observeEvent(input$form_table,{
  output$graph <- renderUI({
    if (is.null(data())) return(NULL)
    tagList(
      radioButtons("x_graph", "Данные по оси Х:", 
                   col_sort(),
                   choices = col_sort())
    )
  })
})




observeEvent(input$plot,{
  output$graph <- renderUI({
    insertUI("#plot", "beforeBegin",
             actionButton("plot_1", "Построить"))
    if (is.null(data())) return(NULL)
    tagList(
      radioButtons("x_graph", "Данные по оси Х:", 
                   colnames(data())
      ),
      radioButtons("y_graph", "Данные по оси Y:", 
                   colnames(data())
      )
    )
    
  })
  
})

library(dplyr)
library(tidyr) 
library(openxlsx)
library(ggplot2)
library(plotly)

file_path <- 'FRT Weekly Monitoting_final.xlsx'
Data <- Data_read <- read.xlsx(file_path ,sheet = 1, detectDates = TRUE)
USG_first <- Data[Data$Material=="USG - 1k",]
A_Th_first <- data.frame(USG_first$Date, USG_first$`Average.Thickness(nm)`)
A_Th_first <- na.omit(A_Th_first)
rownames(A_Th_first)= c(1:length(A_Th_first$USG_first.Date))
names(A_Th_first) <- c('Date','Average_Thickness_nm')
A_Th_first$Average_Thickness_nm <- round(A_Th_first$Average_Thickness_nm,2)
A_Th_first$Date <- as.Date(as.character(A_Th_first$Date))
A_Th_first<-A_Th_first[order(A_Th_first$Date),]

plot_ly(A_Th_first, x = ~Date, y = ~Average_Thickness_nm,
        name = 'Average Thickness', mode = 'lines+markers')


