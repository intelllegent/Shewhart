"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
}
for (i in 1:length(n)){
x = n[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
}
k
n
k[14]
str(k)
db4 <- read_excel("MicroWave Weekly Monitoting.xls", col_types = k)
for (i in 1:length(n)){
x = n[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
}
get_types <- function(column_names){
for (i in 1:length(column_names)){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
aaa <- get_types(n)
aaa
n
n[24] <- ""
n
aaa <- get_types(n)
aaa
length(n)
length(aaa)
get_types <- function(column_names){
for (i in 1:(length(column_names)+1)){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
aaa <- get_types(n)
aaa
length(aaa)
length(n)
get_types <- function(column_names){
for (i in 1:(length(column_names))){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
aaa <- get_types(n)
n
aaa
length(n)
length(aaa)
n
n[24] <- ttt
n[24] <- "ttt"
n
aaa <- get_types(n)
aaa
n[24] <- "Use"
aaa <- get_types(n)
aaa
n
length(n)
length(aaa)
get_types <- function(column_names){
for (i in 1:(length(column_names)+1)){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
aaa <- get_types(n)
length(aaa)
get_types <- function(column_names){
for (i in 1:(length(column_names)+2)){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
length(aaa)
aaa <- get_types(n)
length(aaa)
get_types <- function(column_names){
i=1
for (i in 1:(length(column_names))){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
aaa <- get_types(n)
length(aaa)
length(n)
get_types <- function(column_names){
i=1
for (i in 1:(length(column_names)+1)){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
return(k)
}
}
length(n)
aaa <- get_types(n)
length(aaa)
length(n)
get_types <- function(column_names){
i=1
for (i in 1:(length(column_names)+1)){
x = column_names[i]
k[i] <- switch(x,
"Date" = "date",
"Material" = "text",
"FOUP ID" = "text",
"Wafer ID" = "text",
"Deposition/Sputter" = "text",
"Test's type" = "text",
"Use" = "text",
"Test type" = "text",
"Recipe" = "text",
"Operator" = "text",
"Point" = "numeric",
"X(mm)" = "numeric",
"Y(mm)" = "numeric",
"Thickness(nm)" = "numeric",
"Thickness PRE(nm)" = "numeric",
"Thickness POST(nm)" = "numeric",
"Dep time(s)" = "numeric",
"Dep Rate (nm/min)" = "numeric",
"Average Thickness(nm)" = "numeric",
"Max(nm)" = "numeric",
"Min(nm)" = "numeric",
"Delta" = "numeric",
"Delta, nm" = "numeric",
"Delta (nm)" = "numeric",
"NU, %" = "numeric",
"guess")
}
return(k)
}
length(n)
aaa <- get_types(n)
length(aaa)
aaa
runApp()
plot$x
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a <- c("1","2","3","4","5")
b <- c("2","3","5")
setdiff(a,b)
setdiff(b,a)
runApp()
runApp('D:/R_Projects/Graph.R')
runApp('D:/R_Projects/Graph.R')
runApp('D:/R_Projects/Inme/Graph.R')
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
col_names
col_names()
isolate(col_names())
runApp()
install.packages("xlconnect")
install.packages("XLConnect")
library(XLConnect)
library(XLConnect)
library('XLConnect')
library('XLConnectJars')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a
b
setdiff(a,b)
setdiff(a,b)
setdiff(b,a)
runApp()
a$1
a[1]
grep("1",a)
grep("4",a)
grep("6",a)
runApp()
runApp()
runApp()
shiny::runApp()
vec <- vector(mode="integer")
vec[1] <- 1
bec[1]
vec[1]
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
tes=0
tes
tes==0
tes!=0
runApp()
runApp()
runApp()
runApp()
runApp()
Ñ„
a
b
grep(a,b)
c
c <- grep(a,b)
c
grepRaw("no match", "textText")  # integer(0): no match
grepRaw("adf", "adadfadfdfadadf") # 3 - the first match
grepRaw("adf", "adadfadfdfadadf",
all=TRUE, fixed=TRUE)
grepRaw("no match", a)
a
b
grep("1", b)
test <- grep("1", b)
is.empty.model(test)
is.empty(test)
is.null(test)
runApp()
runApp()
runApp()
runApp()
runApp()
